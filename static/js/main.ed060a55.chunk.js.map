{"version":3,"sources":["components/TextForm.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","props","useState","text","setText","className","style","color","mode","heading","backgroundColor","value","onChange","event","target","id","rows","onClick","newText","toUpperCase","showAlert","toLowerCase","replace","s","email","emailsArray","match","i","length","extractEmails","split","Navbar","href","title","type","placeholder","toggleMode","htmlFor","Alert","alert","role","word","lower","charAt","slice","Captilize","msg","App","setmode","setalert","message","setTimeout","aboutTitle","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed060a55.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    function capitalizeName(name) {\r\n        return name.replace(/\\b(\\w)/g, s => s.toUpperCase());\r\n      }\r\n    function extractEmails (text)\r\n    {\r\n        //return text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi).toString();\r\n        \r\n       var separateEmailsBy = \", \";\r\n\t\tvar email = \"<none>\"; // if no match, use this\r\n\t\tvar emailsArray = text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n\t\tif (emailsArray) {\r\n\t\t\t email = \"\";\r\n\t\t\tfor (var i = 0; i < emailsArray.length; i++) {\r\n\t\t\t\tif (i !== 0) email += separateEmailsBy;\r\n\t\t\t\temail += emailsArray[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn email;\r\n        \r\n    }\r\n    const FetchEmail=()=>{\r\n        let newText=extractEmails(text);\r\n        setText(newText);\r\n        props.showAlert(\"Email Eetch\",\"success\")\r\n    }\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Convert of UpperCase\",\"success\")\r\n    }\r\n    const handleLowerClick=()=>{\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Convert of LowerCase\",\"success\")\r\n    }\r\n    const handleCapitalFirst=()=>{\r\n        \r\n        let newText=capitalizeName(text);\r\n        setText(newText);\r\n        props.showAlert(\"Convert of firstCapital of each\",\"success\")\r\n    }\r\n    const handleClear=()=>{\r\n        // console.log(\"Uppercase was clicked\"+text);\r\n        let newText=('');\r\n        setText(newText);\r\n        props.showAlert(\"Clear the text\",\"success\")\r\n    }\r\n    \r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container \" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"form-group\">\r\n            <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"10\"></textarea>\r\n            <button className=\"btn btn-primary  my-2 mx-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button className=\"btn btn-primary  my-2 mx-1\" onClick={handleLowerClick}>Convert to lowercase</button>\r\n            <button className=\"btn btn-primary  my-2 mx-1\" onClick={handleCapitalFirst}>CapFirst</button>\r\n            <button className=\"btn btn-primary  my-2 mx-1\" onClick={handleClear}>ClearText</button>\r\n            <button className=\"btn btn-primary  my-2 mx-1\" onClick={FetchEmail}>Fetch Email</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}} >\r\n            <h2>Your text summery</h2>\r\n            <p>your words are {text.split(\" \").length} and letters are {text.length}</p>\r\n            <p>{0.008*text.split(\" \").length} minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter Something in the textBox above to preview here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n                {props.aboutTitle}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div className={`form-check form-switch mx-2 text-${props.mode==='light'?'dark':'white'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    aboutTitle:PropTypes.string.isRequired\r\n}","import React from 'react';\r\n\r\n\r\nexport default function Alert(props) {\r\n    const Captilize=(word)=>{\r\n            const lower=word.toLowerCase();\r\n           return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{Captilize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Navbar from \"./components/Navbar\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n\n  const [alert, setalert] = useState(null)\n  const showAlert=(message,type)=>{\n      setalert({\n        msg:message,\n        type:type\n      })\n      setTimeout(() => {\n        setalert(null)\n      }, 1500);\n  }\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setmode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"dark mode has been enable\",\"success\");\n      document.title=\"TextUtils - DarkMode\"\n    }\n    else\n    {\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"light mode has been enable\",\"success\");\n      document.title=\"TextUtils - LightMode\"\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutTitle=\"About us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            \n        <TextForm heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert}/>\n          {/* </Route>\n        </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}